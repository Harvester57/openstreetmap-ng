name: Run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  test:
    name: ${{ matrix.implementation }} tests (${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        implementation: [python, cython]
        exclude:
          - os: macos-latest
            implementation: cython
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: nixbuild/nix-quick-install-action@1f095fee853b33114486cfdeae62fa099cda35a9 # v33

      - name: Generate cache key
        run: |
          nixpkgs_hash=$(grep -Eom1 'archive/[0-9a-f]{40}\.tar\.gz' shell.nix | cut -d'/' -f2 | cut -d'.' -f1)
          echo "NIXPKGS_HASH=$nixpkgs_hash" >> $GITHUB_ENV
          echo "CACHE_KEY=${{ runner.os }}-$nixpkgs_hash" >> $GITHUB_ENV

      - uses: nix-community/cache-nix-action@135667ec418502fa5a3598af6fb9eb733888ce6a # v6.1.3
        with:
          primary-key: nix-${{ env.CACHE_KEY }}

      - name: Setup NIX_PATH
        run: |
          path=$(nix eval --impure --expr "(import (fetchTarball \"https://github.com/NixOS/nixpkgs/archive/${{ env.NIXPKGS_HASH }}.tar.gz\") {}).path")
          echo "NIX_PATH=nixpkgs=$path" >> $GITHUB_ENV

      - name: Get cache directories
        id: cache-dirs
        run: |
          nix-shell -p uv pnpm --run "
            echo \"UV_CACHE=\$(uv cache dir)\"
            echo \"PNPM_STORE=\$(pnpm store path)\"
          " | tee -a $GITHUB_OUTPUT

      - name: Cache files and packages
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          key: pkg-${{ env.CACHE_KEY }}-${{ hashFiles('uv.lock', 'pnpm-lock.yaml') }}
          path: |
            ${{ steps.cache-dirs.outputs.UV_CACHE }}
            ${{ steps.cache-dirs.outputs.PNPM_STORE }}
            .venv
            node_modules
            app/static/img/element/_generated
            config/locale/gnu
            config/locale/i18next
            config/locale/postprocess

      - name: Build Cython modules
        if: matrix.implementation == 'cython'
        run: |
          nix-shell --pure --run "cython-build-fast"

      - name: Start services
        run: |
          nix-shell --pure --run "dev-start"

      - name: Run tests
        run: |
          nix-shell --pure --run "run-tests --extended --term"
